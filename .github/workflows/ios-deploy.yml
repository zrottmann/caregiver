name: iOS TestFlight Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  ios-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          cache: true
          cache-key: flutter-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Setup iOS
        run: |
          cd ios
          pod install --repo-update

      - name: Build iOS (Debug)
        run: |
          flutter build ios --debug --no-codesign

      - name: Create IPA for Development
        if: github.ref == 'refs/heads/main' && github.event_name != 'workflow_dispatch'
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Debug \
            -destination generic/platform=iOS \
            -archivePath build/Runner.xcarchive \
            archive

          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build/ \
            -exportOptionsPlist build/ExportOptions.plist

      # Production TestFlight Upload (only on tags or manual trigger)
      - name: Build iOS Release
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        run: flutter build ios --release

      - name: Create Release Archive
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        run: |
          cd ios
          # Create export options plist
          cat > ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
              <key>manageAppVersionAndBuildNumber</key>
              <true/>
          </dict>
          </plist>
          EOF

          # Archive for App Store
          xcodebuild -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath build/Runner.xcarchive \
            archive

          # Export IPA
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportPath build/ \
            -exportOptionsPlist ExportOptions.plist

      - name: Upload to TestFlight
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          xcrun altool --upload-app \
            --type ios \
            --file ios/build/Runner.ipa \
            --username "$APPLE_ID" \
            --password "$APPLE_ID_PASSWORD" \
            --asc-provider "$APPLE_TEAM_ID"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-build-${{ github.sha }}
          path: |
            ios/build/
            *.ipa
          retention-days: 30